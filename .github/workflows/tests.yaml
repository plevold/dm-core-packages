on:
  # Workflow dispatch is used for manual triggers
  workflow_dispatch:
  # Workflow call is used for called from another workflow
  workflow_call:

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Run prettier formatting
        run: pre-commit run prettier --all-files

  tests:
    strategy:
      matrix:
        package: [dm-core, dm-core-plugins]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      - uses: actions/setup-node@v3

      # TODO: Cache yarn install

      - name: Set variables
        id: variables
        working-directory: packages/${{ matrix.package }}
        run: |
          echo "DM_CORE_VERSION=$(cat package.json | jq '.["dependencies"]["@development-framework/dm-core"]')" >> "$GITHUB_OUTPUT"
          echo "TEST_COMMAND=$(cat package.json | jq '.["scripts"]["test"]')" >> "$GITHUB_OUTPUT"

      - name: 'Install dependencies'
        working-directory: packages/${{ matrix.package }}
        run: yarn install

      - name: 'Copy local variant of dm-core to node_modules'
        working-directory: packages/${{ matrix.package }}
        if: steps.variables.outputs.DM_CORE_VERSION != 'null'
        run: |
          cd ../dm-core
          yarn install --no-lockfile
          yarn build
          cd ../dm-core-plugins
          rm -r node_modules/@development-framework/dm-core/*
          cp -r ../dm-core/dist node_modules/@development-framework/dm-core/dist
          cp ../dm-core/package.json node_modules/@development-framework/dm-core/package.json

      - name: 'yarn tsc'
        working-directory: packages/${{ matrix.package }}
        run: yarn tsc

      - name: 'yarn test'
        working-directory: packages/${{ matrix.package }}
        if: steps.variables.outputs.TEST_COMMAND != 'null'
        run: yarn test
